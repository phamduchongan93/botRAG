# .github/workflows/build-docs.yml (or part of ci.yml)
name: Build Documentation & Diagrams

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**.md'
      - 'docs/**/*.py' # Trigger if diagram scripts change
      - 'mkdocs.yml'

jobs:
  build_docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install diagrams
          sudo apt-get update && sudo apt-get install -y graphviz # Install Graphviz
        working-directory: docs/ # Or wherever you put requirements.txt for docs

      - name: Generate Diagrams
        run: |
          python diagrams/hybrid_cloud_architecture.py
          # Add other diagram scripts here
        working-directory: docs/ # Run from docs folder
        # Ensure the output .png/.svg files are generated in a path that MkDocs can access (e.g., docs/img/)

      - name: Build MkDocs Site
        run: |
          pip install mkdocs mkdocs-material # Install MkDocs and theme
          mkdocs build
        working-directory: docs/

              - name: Build MkDocs Site & Export PDF
        run: |
          mkdocs build --strict # --strict ensures warnings are treated as errors
          # The pdf-export plugin automatically triggers PDF generation during 'mkdocs build'
          # The PDF will be in the 'site' directory, e.g., 'site/pdf/document.pdf'
          # Check your mkdocs.yml for the exact output path if configured.
        working-directory: docs/

      - name: Commit and Push Compiled PDF
        # This step assumes the PDF is generated into the `docs/site/` folder relative to your repo root.
        # Check your mkdocs.yml for the exact path of the generated PDF.
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Assuming PDF is generated at docs/site/pdf/document.pdf
          # Adjust the path below if your pdf-export plugin output location is different.
          PDF_PATH="docs/site/pdf/document.pdf" # **UPDATE this if your PDF path is different**
          DEST_PATH="docs/omnirag_docs.pdf" # **Desired final location for your documentation PDF**

          # Ensure the destination directory exists if it's different from source
          mkdir -p $(dirname $DEST_PATH)

          # Move the generated PDF to a stable, version-controlled location
          mv "$PDF_PATH" "$DEST_PATH"

          git add "$DEST_PATH"
          git commit -m "Auto-commit: Compiled MkDocs PDF documentation [skip ci]" || echo "No changes to commit"
          git push origin HEAD:main
